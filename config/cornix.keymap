/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "includes/cornix54.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>


&mmv {
    acceleration-exponent = <1>;  // 1
    time-to-max-speed-ms = <500>; // 300
    delay-ms = <0>;
    trigger-period-ms = <8>;      // 16
};
&msc {
    acceleration-exponent = <1>;  // 0
    time-to-max-speed-ms = <40>;  // 300
    delay-ms = <0>;
    trigger-period-ms = <8>;      // 16
};

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10


/ {

    combos {
        compatible = "zmk,combos";
        homerow_rgui {
            timeout-ms = <50>;
            key-positions = <7 19>;
            bindings = <&kp LGUI>;
        };
        homerow_lgui {
            timeout-ms = <50>;
            key-positions = <4 16>;
            bindings = <&kp LGUI>;
        };

        homerow_rctrl {
            timeout-ms = <50>;
            key-positions = <8 20>;
            bindings = <&kp LCTRL>;
        };
        homerow_lctrl {
            timeout-ms = <50>;
            key-positions = <3 15>;
            bindings = <&kp LCTRL>;
        };

        homerow_ralt {
            timeout-ms = <50>;
            key-positions = <9 21>;
            bindings = <&kp LALT>;
        };
            timeout-ms = <50>;
            homerow_lalt {
            key-positions = <2 14>;
            bindings = <&kp LALT>;
        };

        homerow_rshft {
            timeout-ms = <50>;
            key-positions = <10 22>;
            bindings = <&kp LSHFT>;
        };
        homerow_lshft {
            timeout-ms = <50>;
            key-positions = <1 13>;
            bindings = <&kp LSHFT>;
        };

        homerow_esc {
            timeout-ms = <50>;
            key-positions = <0 12>;
            bindings = <&kp ESC>;
        };

        homerow_cut {
            timeout-ms = <50>;
            key-positions = <14 26>;
            bindings = <&kp LG(X)>;
        };

        homerow_copy {
            timeout-ms = <50>;
            key-positions = <15 27>;
            bindings = <&kp LG(C)>;
        };

        homerow_paste {
            timeout-ms = <50>;
            key-positions = <16 28>;
            bindings = <&kp LG(V)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
            &kp ESC        &kp Q         &kp W       &kp F      &kp P    &kp G                 &kp J    &kp L     &kp U        &kp Y       &kp SEMI     &kp BSPC
            &mt LSHFT TAB  &kp A         &kp R       &kp S      &kp T    &kp D                 &kp H    &kp N     &kp E        &kp I       &kp O        &kp SQT
            &mt LCTRL ESC  &kp Z         &kp X       &kp C      &kp V    &kp B    &none &none  &kp K    &kp M     &kp COMMA    &kp DOT     &kp FSLH     &kp RALT
            &kp LCTRL      &kp LGUI      &kp LALT    &kp RALT   &mo 1    &kp SPACE             &lt 3 RET &mo 2    &kp RALT     &kp LEFT    &kp RIGHT    &kp LALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
              &kp GRAVE        &trans       &kp UP           &trans      &msc SCRL_UP          &trans      &trans    &kp UNDER  &kp MINUS &kp PLUS  &kp EQUAL &kp BSPC
              &kp LC(LS(TAB))  &kp LEFT     &kp DOWN         &kp RIGHT   &msc SCRL_DOWN        &trans      &trans    &kp LPAR   &kp RPAR  &kp LBRC  &kp RBRC  &trans
              &kp LSHFT        &kp C_PREV   &kp C_PLAY_PAUSE &kp C_NEXT  &trans           &trans &trans              &trans      &trans    &kp LBKT   &kp RBKT  &kp PIPE  &kp BSLH  &trans
              &kp LCTRL        &kp LGUI     &kp LALT         &kp RALT    &mo 1  &kp SPACE      &kp RET     &mo 2     &kp RALT   &kp LEFT  &kp RIGHT &kp LALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {

            // TODO: Some binds are waiting for shifted keycode support.
            // -------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
              &kp TAB       &mkp MB1        &kp PG_UP   &mkp MB2    &kp DLLR  &kp PRCNT               &trans &kp N7  &kp N8  &kp N9  &kp RPAR  &kp DEL
              &kp LC(TAB)   &kp HOME        &kp PG_DN   &kp END     &trans    &trans                  &trans &kp N4  &kp N5  &kp N6  &kp N0     &kp GRAVE
              &kp LSHFT     &trans          &trans      &trans      &trans    &trans              &trans &trans             &kp UNDER &kp N1  &kp N2  &kp N3  &kp PIPE  &kp TILDE
              &kp LCTRL     &kp LGUI        &kp LALT    &kp RALT    &mo 1     &kp SPACE               &kp RET   &mo 2      &kp RALT  &kp LEFT  &kp RIGHT &kp LALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

          adjust_layer {
                        bindings = <
   &kp TAB      &mkp  MB1        &mmv MOVE_UP     &mkp MB2          &kp DLLR      &kp PRCNT                       &bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &soft_off
   &kp LC(TAB)  &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT   &trans        &trans                          &trans &kp F4  &kp F5  &kp F6  &kp F12     &kp GRAVE
   &mkp MB1     &trans           &trans           &trans            &trans        &trans               &trans &trans                  &kp UNDER &kp F1  &kp F2  &kp F3  &kp PIPE  &kp TILDE
   &kp LCTRL    &kp LGUI         &kp LALT         &kp RALT          &kp C_VOL_DN  &kp SPACE     &kp RET      &kp C_VOL_UP      &kp RALT  &kp LEFT  &kp RIGHT &kp LALT
                        >;
        };
    };
};
